/*
 * diffusion-node-client
 * Copyright (c) 2014, Push Technology Ltd., All rights reserved.
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.
 */

/**
 * Message
 */

var Message = function(type) {
    this._type = type;
    this._topic = undefined;
    this._headers = [];
    this._body = '';
};

Message.prototype.getType = function() {
    return this._type;
};

Message.prototype.getHeaders = function() {
    return this._headers;
};

Message.prototype.setHeaders = function(headers) {
    this._headers = headers;
};

Message.prototype.getBody = function() {
    return this._body;
};

Message.prototype.setBody = function(body) {
    this._body = body;
};

Message.prototype.getTopic = function() {
    return this._topic;
};

Message.prototype.setTopic = function(topic) {
    this._topic = topic;
};

Message.prototype._parseTopic = function(client, topic) {
    var bang = topic.indexOf('!');
    if(bang === -1) {
	return topic;
    }
    if(bang === 0) {
	var name = client._aliasMap[topic.substring(1)];
	if(name === undefined) {
	    throw 'Unknown topic alias received';
	}
	return name;
    }
    else {
	var name = topic.substring(0, bang);
	var alias = topic.substring(bang + 1);
	client._aliasMap[alias] = name;
	return name;
    }
};

Message.prototype.getHeaderLength = function() {
    var len = 0;
    for(var i in this._headers) {
	len += this._headers[i].length + 1; // +1 for separator
    }
    return len;
};

Message.prototype.getBodyLength = function() {
    return this._body.length;
};

module.exports = {
    Message : Message
};
